plugins {
    id 'kotlin-android'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id "com.google.protobuf" version "0.8.17"
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'kotlinx-serialization'
    id 'com.google.devtools.ksp' version '1.7.10-1.0.6'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "io.github.kabirnayeem99.islamqaorg"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.2.1-alpha"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
        ]
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.2.0"
    }

    buildFeatures {
        compose true
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
        resources.excludes.add("mozilla/*")
    }

    // required for generated code by compose-destination library
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }


}

dependencies {

    // Core
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.ui:ui-foundation:0.1.0-dev14'
    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'

    // Skrape.it - for web scraping
    implementation 'it.skrape:skrapeit:1.3.0-alpha.1'

    // Jetpack Compose - for UI building
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.compose.material:material:1.3.0-alpha02'
    implementation 'androidx.compose.animation:animation:1.3.0-alpha02'
    implementation 'androidx.compose.ui:ui-tooling:1.3.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    def material_3_version = '1.0.0-alpha15'
    implementation "androidx.compose.material3:material3:$material_3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material_3_version"
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.26.0-alpha'

    // Navigation
    def nav_version = '2.5.1'
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Compose-shimmer - for shimmer loading animation
    implementation 'com.valentinilk.shimmer:compose-shimmer:1.0.3'

    // Coroutines - for threading
    def coroutines_version = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // LifeCycle Components and Extensions
    def lifecycle_version = '2.5.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Timber - for better and more secure, hassle-free logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Hilt - for dependency injection
    def hilt_dagger_version = '2.43.1'
    implementation "com.google.dagger:hilt-android:$hilt_dagger_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_dagger_version"

    // Room - for storing data locally
    def room_version = '2.4.3'
    implementation "androidx.room:room-runtime:$room_version"
    kapt 'androidx.room:room-compiler:2.4.3'
    implementation "androidx.room:room-ktx:$room_version"

    // Kotlin JSON Serializer -> for serialization and deserialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3'

    // Glide - for image loading
    def glide_version = "4.13.2"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.github.skydoves:landscapist-glide:1.6.0'

    // Compose Destinations - for better and simpler navigation
    implementation 'io.github.raamcosta.compose-destinations:animations-core:1.7.15-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.7.15-beta'

    // Work Manager - for background syncing
    def work_manager_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'androidx.test.ext:truth:1.5.0-alpha07'
    testImplementation 'androidx.test.ext:truth:1.5.0-alpha07'
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.robolectric:robolectric:4.8.1'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "com.google.truth:truth:1.1.3"

    // Accompanist Permissions - for handling permission in compose
    implementation 'com.google.accompanist:accompanist-permissions:0.26.0-alpha'

}

// to suppress opt-in feature warning
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=io.ktor.util.KtorExperimentalAPI"
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=io.ktor.locations.KtorExperimentalLocationsAPI"]
    }
}
